// <auto-generated />
using System;
using ERP.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERPAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191015221152_FixedAsset")]
    partial class FixedAsset
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERPAPI.Models.Accounting", b =>
                {
                    b.Property<long>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountBalance");

                    b.Property<int>("AccountClasses");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("BlockedInJournal");

                    b.Property<long>("CompanyInfoId");

                    b.Property<string>("Description")
                        .HasMaxLength(5000);

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("HierarchyAccount");

                    b.Property<long?>("IdEstado");

                    b.Property<bool>("IsCash");

                    b.Property<bool>("IsContraAccount");

                    b.Property<long?>("ParentAccountAccountId");

                    b.Property<int?>("ParentAccountId");

                    b.Property<byte[]>("RowVersion")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasMaxLength(8);

                    b.Property<long>("TypeAccountId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("AccountId");

                    b.HasIndex("CompanyInfoId");

                    b.HasIndex("ParentAccountAccountId");

                    b.ToTable("Accounting");
                });

            modelBuilder.Entity("ERPAPI.Models.Alert", b =>
                {
                    b.Property<long>("AlertId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ActionTakenId");

                    b.Property<long>("ActionTakenName");

                    b.Property<string>("AlertName");

                    b.Property<DateTime>("CloseDate");

                    b.Property<string>("Code");

                    b.Property<string>("Description");

                    b.Property<string>("DescriptionAlert");

                    b.Property<long>("DocumentId");

                    b.Property<string>("DocumentName");

                    b.Property<string>("Estado");

                    b.Property<bool>("FalsoPositivo");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<bool>("SujetaARos");

                    b.Property<string>("Type");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("AlertId");

                    b.ToTable("Alert");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<int>("BranchId");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<bool?>("IsEnabled");

                    b.Property<DateTime>("LastPasswordChangedDate");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("PolicyId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserRole", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("RoleName");

                    b.Property<string>("UserName");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<Guid>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserTokens", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ERPAPI.Models.Bank", b =>
                {
                    b.Property<long>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("BankId");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("ERPAPI.Models.Bitacora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion");

                    b.Property<string>("ClaseInicial");

                    b.Property<string>("Descripcion");

                    b.Property<string>("DocType");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("HoraFin");

                    b.Property<DateTime?>("HoraInicio");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdOperacion");

                    b.Property<string>("NoReferencia");

                    b.Property<string>("QueryEjecuto");

                    b.Property<string>("ResultadoSerializado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioEjecucion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("Bitacora");
                });

            modelBuilder.Entity("ERPAPI.Models.BlackListCustomers", b =>
                {
                    b.Property<long>("BlackListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias");

                    b.Property<long>("CityId");

                    b.Property<string>("CityName");

                    b.Property<string>("Comments");

                    b.Property<long>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerReference");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Identidad");

                    b.Property<string>("Origen");

                    b.Property<string>("RTN");

                    b.Property<string>("Referencia");

                    b.Property<long>("StateId");

                    b.Property<string>("StateName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("BlackListId");

                    b.ToTable("BlackListCustomers");
                });

            modelBuilder.Entity("ERPAPI.Models.BoletaDeSalida", b =>
                {
                    b.Property<long>("BoletaDeSalidaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CargadoId");

                    b.Property<string>("Cargadoname");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("GoodsDeliveredId");

                    b.Property<long>("GoodsDeliveryAuthorizationId");

                    b.Property<long>("GoodsReceivedId");

                    b.Property<string>("Marca");

                    b.Property<string>("Motorista");

                    b.Property<string>("Placa");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("Vigilante");

                    b.Property<long>("VigilanteId");

                    b.Property<long>("WeightBallot");

                    b.HasKey("BoletaDeSalidaId");

                    b.ToTable("BoletaDeSalida");
                });

            modelBuilder.Entity("ERPAPI.Models.Boleto_Ent", b =>
                {
                    b.Property<long>("clave_e");

                    b.Property<string>("bascula_e");

                    b.Property<string>("clave_C");

                    b.Property<string>("clave_o");

                    b.Property<string>("clave_p");

                    b.Property<string>("clave_u");

                    b.Property<bool>("completo");

                    b.Property<string>("conductor");

                    b.Property<DateTime>("fecha_e");

                    b.Property<string>("hora_e");

                    b.Property<string>("nombre_oe");

                    b.Property<string>("observa_e");

                    b.Property<int>("peso_e");

                    b.Property<string>("placas");

                    b.Property<int>("t_entrada");

                    b.Property<string>("turno_oe");

                    b.Property<string>("unidad_e");

                    b.HasKey("clave_e");

                    b.ToTable("Boleto_Ent");
                });

            modelBuilder.Entity("ERPAPI.Models.Boleto_Sal", b =>
                {
                    b.Property<long>("clave_e");

                    b.Property<string>("bascula_s");

                    b.Property<string>("clave_o");

                    b.Property<DateTime>("fecha_s");

                    b.Property<string>("hora_s");

                    b.Property<string>("observa_s");

                    b.Property<double>("peso_n");

                    b.Property<double>("peso_s");

                    b.Property<bool>("s_manual");

                    b.Property<string>("turno_s");

                    b.HasKey("clave_e");

                    b.ToTable("Boleto_Sal");
                });

            modelBuilder.Entity("ERPAPI.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("BranchCode");

                    b.Property<string>("BranchName")
                        .IsRequired();

                    b.Property<string>("City");

                    b.Property<long>("CityId");

                    b.Property<string>("ContactPerson");

                    b.Property<long>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<decimal?>("LimitCNBS");

                    b.Property<int>("Numero");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<long>("StateId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("ZipCode");

                    b.HasKey("BranchId");

                    b.HasIndex("BranchCode")
                        .IsUnique()
                        .HasFilter("[BranchCode] IS NOT NULL");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IdEstado");

                    b.HasIndex("StateId");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("ERPAPI.Models.BranchPorDepartamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdDepartamento");

                    b.Property<string>("NombreDepartamento");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("BranchPorDepartamento");
                });

            modelBuilder.Entity("ERPAPI.Models.CAI", b =>
                {
                    b.Property<long>("IdCAI")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaRecepcion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("_cai");

                    b.HasKey("IdCAI");

                    b.ToTable("CAI");
                });

            modelBuilder.Entity("ERPAPI.Models.CalculoPlanilla", b =>
                {
                    b.Property<long>("Idcalculo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("Fechafin");

                    b.Property<DateTime?>("Fechainicio");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<decimal?>("TasaCambio");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Idcalculo");

                    b.ToTable("CalculoPlanilla");
                });

            modelBuilder.Entity("ERPAPI.Models.CalculoPlanillaDetalle", b =>
                {
                    b.Property<long>("Iddetallecalculo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("Fechacreacion");

                    b.Property<string>("FormulaEjecutada");

                    b.Property<long?>("IdCalculo");

                    b.Property<long?>("IdFormula");

                    b.Property<long?>("IdOrdenFormula");

                    b.Property<long?>("IdPuesto");

                    b.Property<long?>("Idempleado");

                    b.Property<int?>("IdtipoFormula");

                    b.Property<string>("NombreFormula");

                    b.Property<string>("NombreTipoFormula");

                    b.Property<string>("Nombreempleado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<decimal?>("ValorFormula");

                    b.HasKey("Iddetallecalculo");

                    b.ToTable("CalculoPlanillaDetalle");
                });

            modelBuilder.Entity("ERPAPI.Models.CertificadoDeposito", b =>
                {
                    b.Property<long>("IdCD")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aduana");

                    b.Property<string>("Almacenaje");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Direccion");

                    b.Property<string>("EmpresaSeguro");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCertificado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaFirma");

                    b.Property<DateTime>("FechaInicioComputo");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaPagoBanco");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<DateTime>("FechaVencimientoDeposito");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<string>("LugarFirma");

                    b.Property<string>("ManifiestoNo");

                    b.Property<double>("MontoGarantia");

                    b.Property<long>("NoCD");

                    b.Property<string>("NoPoliza");

                    b.Property<long>("NoTraslado");

                    b.Property<string>("NombreEmpresa");

                    b.Property<string>("NombrePrestatario");

                    b.Property<string>("OtrosCargos");

                    b.Property<double>("PorcentajeInteresesInsolutos");

                    b.Property<double>("Quantitysum");

                    b.Property<string>("Seguro");

                    b.Property<long>("ServicioId");

                    b.Property<string>("ServicioName");

                    b.Property<double>("SujetasAPago");

                    b.Property<double>("Total");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.HasKey("IdCD");

                    b.ToTable("CertificadoDeposito");
                });

            modelBuilder.Entity("ERPAPI.Models.CertificadoLine", b =>
                {
                    b.Property<long>("CertificadoLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<long>("CenterCostId");

                    b.Property<string>("CenterCostName");

                    b.Property<string>("Description");

                    b.Property<long>("IdCD");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<double>("SaldoEndoso");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("TotalCantidad");

                    b.Property<string>("UnitMeasurName");

                    b.Property<long>("UnitMeasureId");

                    b.HasKey("CertificadoLineId");

                    b.HasIndex("IdCD");

                    b.ToTable("CertificadoLine");
                });

            modelBuilder.Entity("ERPAPI.Models.CheckAccount", b =>
                {
                    b.Property<long>("CheckAccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssociatedAccountNumber");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<string>("CheckAccountNo");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaIngreso");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("NoFinal");

                    b.Property<string>("NoInicial");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CheckAccountId");

                    b.ToTable("CheckAccount");
                });

            modelBuilder.Entity("ERPAPI.Models.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CountryId");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<long?>("StateId");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ERPAPI.Models.Comision", b =>
                {
                    b.Property<long>("ComisionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("TipoComision");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ComisionId");

                    b.ToTable("Comision");
                });

            modelBuilder.Entity("ERPAPI.Models.CompanyInfo", b =>
                {
                    b.Property<long>("CompanyInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Company_Name");

                    b.Property<long>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Manager");

                    b.Property<string>("Phone");

                    b.Property<string>("PostalCode");

                    b.Property<string>("PrintHeader");

                    b.Property<string>("RTNMANAGER");

                    b.Property<string>("RevOffice");

                    b.Property<string>("Tax_Id");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("image");

                    b.HasKey("CompanyInfoId");

                    b.ToTable("CompanyInfo");
                });

            modelBuilder.Entity("ERPAPI.Models.Conciliacion", b =>
                {
                    b.Property<int>("ConciliacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName")
                        .IsRequired();

                    b.Property<DateTime>("FechaConciliacion");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long?>("IdBanco");

                    b.Property<string>("NombreArchivo")
                        .IsRequired();

                    b.Property<double>("SaldoConciliado");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("ConciliacionId");

                    b.HasIndex("IdBanco");

                    b.ToTable("Conciliacion");
                });

            modelBuilder.Entity("ERPAPI.Models.ConciliacionLinea", b =>
                {
                    b.Property<int>("ConciliacionLineaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ElementoConfiguracion");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int?>("IdMoneda");

                    b.Property<string>("MonedaName")
                        .IsRequired();

                    b.Property<double>("Monto");

                    b.Property<string>("ReferenciaBancaria")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("ConciliacionLineaId");

                    b.HasIndex("ElementoConfiguracion");

                    b.HasIndex("IdMoneda");

                    b.ToTable("ConciliacionLinea");
                });

            modelBuilder.Entity("ERPAPI.Models.Conditions", b =>
                {
                    b.Property<long>("ConditionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionName");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ConditionId");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("ERPAPI.Models.ConfigurationVendor", b =>
                {
                    b.Property<long>("ConfigurationVendorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<long>("IdEstado");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<double>("QtyMonth");

                    b.HasKey("ConfigurationVendorId");

                    b.ToTable("ConfigurationVendor");
                });

            modelBuilder.Entity("ERPAPI.Models.ContactPerson", b =>
                {
                    b.Property<long>("ContactPersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactPersonCity");

                    b.Property<int>("ContactPersonCityId");

                    b.Property<string>("ContactPersonEmail");

                    b.Property<string>("ContactPersonEstado");

                    b.Property<long>("ContactPersonIdEstado");

                    b.Property<string>("ContactPersonIdentity");

                    b.Property<string>("ContactPersonName");

                    b.Property<string>("ContactPersonPhone");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser");

                    b.Property<long>("CustomerId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser");

                    b.Property<long>("VendorId");

                    b.HasKey("ContactPersonId");

                    b.ToTable("ContactPerson");
                });

            modelBuilder.Entity("ERPAPI.Models.ControlPallets", b =>
                {
                    b.Property<long>("ControlPalletsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DescriptionProduct");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<int>("EsIngreso");

                    b.Property<int>("EsSalida");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("GoodsDeliveryAuthorizationId");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<string>("Marca");

                    b.Property<string>("Motorista");

                    b.Property<int>("PalletId");

                    b.Property<string>("Placa");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("QQPesoBruto");

                    b.Property<double>("QQPesoFinal");

                    b.Property<double>("QQPesoNeto");

                    b.Property<int>("SacosDevueltos");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<int>("SubTotal");

                    b.Property<double>("Tara");

                    b.Property<int>("TotalSacos");

                    b.Property<int>("TotalSacosPolietileno");

                    b.Property<int>("TotalSacosYute");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int>("WarehouseId");

                    b.Property<long>("WeightBallot");

                    b.HasKey("ControlPalletsId");

                    b.ToTable("ControlPallets");
                });

            modelBuilder.Entity("ERPAPI.Models.ControlPalletsLine", b =>
                {
                    b.Property<long>("ControlPalletsLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Alto");

                    b.Property<int>("Ancho");

                    b.Property<long>("CenterCostId");

                    b.Property<string>("CenterCostName");

                    b.Property<long>("ControlPalletsId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<int>("Otros");

                    b.Property<double>("Totallinea");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int>("cantidadPoliEtileno");

                    b.Property<int>("cantidadYute");

                    b.HasKey("ControlPalletsLineId");

                    b.HasIndex("ControlPalletsId");

                    b.ToTable("ControlPalletsLine");
                });

            modelBuilder.Entity("ERPAPI.Models.CostCenter", b =>
                {
                    b.Property<long>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CostCenterName")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CostCenterId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("ERPAPI.Models.CostListItem", b =>
                {
                    b.Property<long>("CostListItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ConRealBagValueInside");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("DayofCalcule");

                    b.Property<double>("DifferencyPriceBagValue");

                    b.Property<double>("EscrowExpenses");

                    b.Property<long>("ExchangeRateId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<double>("PCRealBagValueInside");

                    b.Property<double>("PermiseExportExpenses");

                    b.Property<double>("PorcentagePriceBagValue");

                    b.Property<double>("PriceBagValue");

                    b.Property<double>("PriceBagValueCurrency");

                    b.Property<double>("RealBagValueCurrency");

                    b.Property<double>("RealBagValueInside");

                    b.Property<double>("RecipientExpenses");

                    b.Property<long>("SubproductId");

                    b.Property<double>("TaxesExpenses");

                    b.Property<double>("TotalExpenses");

                    b.Property<double>("TotalExpensesCurrency");

                    b.Property<double>("TotalIncomes");

                    b.Property<double>("TotalPriceBagValue");

                    b.Property<double>("UtilityExpenses");

                    b.HasKey("CostListItemId");

                    b.ToTable("CostListItem");
                });

            modelBuilder.Entity("ERPAPI.Models.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccionId");

                    b.Property<string>("AccionName");

                    b.Property<DateTime>("Actualizacion");

                    b.Property<string>("Comments");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<bool>("GAFI");

                    b.Property<long>("IdEstado");

                    b.Property<int>("ListaId");

                    b.Property<string>("ListaName");

                    b.Property<string>("Name");

                    b.Property<int>("NivelRiesgo");

                    b.Property<string>("NivelRiesgoName");

                    b.Property<int?>("PhoneCode");

                    b.Property<int>("SeguimientoId");

                    b.Property<string>("SeguimientoName");

                    b.Property<string>("SortName");

                    b.Property<int>("TipoAlertaId");

                    b.Property<string>("TipoAlertaName");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ERPAPI.Models.CreditNote", b =>
                {
                    b.Property<int>("CreditNoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CAI");

                    b.Property<string>("Caja");

                    b.Property<long>("CertificadoDepositoId");

                    b.Property<string>("Correo");

                    b.Property<DateTime>("CreditNoteDate");

                    b.Property<DateTime>("CreditNoteDueDate");

                    b.Property<string>("CreditNoteName");

                    b.Property<int>("CreditNoteTypeId");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Direccion");

                    b.Property<double>("Discount");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Freight");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdPuntoEmision");

                    b.Property<string>("Impreso");

                    b.Property<string>("NoConstanciadeRegistro");

                    b.Property<string>("NoFin");

                    b.Property<string>("NoInicio");

                    b.Property<string>("NoOCExenta");

                    b.Property<string>("NoSAG");

                    b.Property<int>("NúmeroDEI");

                    b.Property<DateTime>("OrderDate");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTN");

                    b.Property<string>("Remarks");

                    b.Property<long>("SalesOrderId");

                    b.Property<int>("SalesTypeId");

                    b.Property<int>("ShipmentId");

                    b.Property<double>("SubTotal");

                    b.Property<string>("Sucursal");

                    b.Property<double>("Tax");

                    b.Property<double>("Tax18");

                    b.Property<string>("Tefono");

                    b.Property<string>("TipoDocumento");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<string>("TotalLetras");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CreditNoteId");

                    b.ToTable("CreditNote");
                });

            modelBuilder.Entity("ERPAPI.Models.CreditNoteLine", b =>
                {
                    b.Property<long>("CreditNoteLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountName");

                    b.Property<double>("Amount");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<int>("CreditNoteId");

                    b.Property<string>("Description");

                    b.Property<double>("DiscountAmount");

                    b.Property<double>("DiscountPercentage");

                    b.Property<double>("Price");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("SubTotal");

                    b.Property<double>("TaxAmount");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.HasKey("CreditNoteLineId");

                    b.HasIndex("CreditNoteId");

                    b.ToTable("CreditNoteLine");
                });

            modelBuilder.Entity("ERPAPI.Models.CuentaBancoEmpleados", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEmpleado");

                    b.Property<string>("NombreEmpleado");

                    b.Property<string>("NumeroCuenta");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("Id");

                    b.ToTable("CuentaBancoEmpleados");
                });

            modelBuilder.Entity("ERPAPI.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyCode")
                        .IsRequired();

                    b.Property<string>("CurrencyName")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("ERPAPI.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<long?>("CityId");

                    b.Property<bool>("ClienteRecoger");

                    b.Property<bool>("ConfirmacionCorreo");

                    b.Property<string>("ContactPerson");

                    b.Property<long?>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<string>("CustomerRefNumber");

                    b.Property<long?>("CustomerTypeId");

                    b.Property<string>("CustomerTypeName");

                    b.Property<string>("Denominacion");

                    b.Property<string>("DireccionEnvio");

                    b.Property<string>("Email");

                    b.Property<bool>("EnviarlaMensajero");

                    b.Property<bool?>("EsExonerado");

                    b.Property<string>("Estado");

                    b.Property<string>("Fax");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("GrupoEconomico");

                    b.Property<long?>("GrupoEconomicoId");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("Identidad")
                        .IsRequired();

                    b.Property<string>("IdentidadApoderado");

                    b.Property<double>("MontoActivos");

                    b.Property<double>("MontoIngresosAnuales");

                    b.Property<string>("NombreApoderado");

                    b.Property<string>("Observaciones");

                    b.Property<string>("PerteneceEmpresa");

                    b.Property<string>("Phone");

                    b.Property<string>("Proveedor1");

                    b.Property<string>("Proveedor2");

                    b.Property<string>("RTN")
                        .IsRequired();

                    b.Property<string>("SolicitadoPor");

                    b.Property<string>("State");

                    b.Property<long?>("StateId");

                    b.Property<long?>("TaxId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("WorkPhone");

                    b.Property<string>("ZipCode");

                    b.HasKey("CustomerId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("IdEstado");

                    b.HasIndex("RTN")
                        .IsUnique();

                    b.HasIndex("StateId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerArea", b =>
                {
                    b.Property<long>("CustomerAreaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Alto");

                    b.Property<double>("Ancho");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Impreso");

                    b.Property<double>("Largo");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<long>("TypeId");

                    b.Property<string>("TypeName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<double>("UsedArea");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("CustomerAreaId");

                    b.ToTable("CustomerArea");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerAreaProduct", b =>
                {
                    b.Property<long>("CustomerAreaProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerAreaId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaMoficacion");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.HasKey("CustomerAreaProductId");

                    b.HasIndex("CustomerAreaId");

                    b.ToTable("CustomerAreaProduct");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerAuthorizedSignature", b =>
                {
                    b.Property<long>("CustomerAuthorizedSignatureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo");

                    b.Property<long>("CustomerId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Listados");

                    b.Property<string>("Nombre");

                    b.Property<string>("RTN");

                    b.Property<string>("Telefono");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CustomerAuthorizedSignatureId");

                    b.ToTable("CustomerAuthorizedSignature");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerConditions", b =>
                {
                    b.Property<long>("CustomerConditionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConditionId");

                    b.Property<string>("CustomerConditionName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("Description");

                    b.Property<long>("DocumentId");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdTipoDocumento");

                    b.Property<string>("LogicalCondition");

                    b.Property<long>("ProductId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double>("ValueDecimal");

                    b.Property<string>("ValueString");

                    b.Property<string>("ValueToEvaluate");

                    b.HasKey("CustomerConditionId");

                    b.ToTable("CustomerConditions");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContract", b =>
                {
                    b.Property<long>("CustomerContractId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BandaTransportadora");

                    b.Property<string>("Correo1");

                    b.Property<string>("Correo2");

                    b.Property<string>("Correo3");

                    b.Property<string>("CustomerConstitution");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerManager");

                    b.Property<string>("CustomerManagerProfesionNacionalidad");

                    b.Property<string>("CustomerName");

                    b.Property<double>("DelegateSalary");

                    b.Property<double>("ExtraHours");

                    b.Property<DateTime>("FechaContrato");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("FoodPayment");

                    b.Property<double>("LatePayment");

                    b.Property<string>("Manager");

                    b.Property<string>("Mercancias");

                    b.Property<double>("MontaCargas");

                    b.Property<double>("MulasHidraulicas");

                    b.Property<double>("Papeleria");

                    b.Property<double>("Porcentaje1");

                    b.Property<double>("Porcentaje2");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTNCustomerManager");

                    b.Property<string>("RTNMANAGER");

                    b.Property<string>("Reception");

                    b.Property<string>("Resolution");

                    b.Property<long>("SalesOrderId");

                    b.Property<string>("StorageTime");

                    b.Property<double>("Transport");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<double>("UsedArea");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double>("Valor1");

                    b.Property<double>("Valor2");

                    b.Property<double>("ValueBascula");

                    b.Property<double>("ValueCD");

                    b.Property<double>("ValueSecure");

                    b.Property<string>("WareHouses");

                    b.Property<string>("WarehouseRequirements");

                    b.HasKey("CustomerContractId");

                    b.ToTable("CustomerContract");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContractWareHouse", b =>
                {
                    b.Property<long>("CustomerContractWareHouseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerContractId");

                    b.Property<string>("EdificioName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("CustomerContractWareHouseId");

                    b.ToTable("CustomerContractWareHouse");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerDocument", b =>
                {
                    b.Property<long>("CustomerDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("DocumentName");

                    b.Property<long>("DocumentTypeId");

                    b.Property<string>("DocumentTypeName");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Path");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CustomerDocumentId");

                    b.ToTable("CustomerDocument");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerPartners", b =>
                {
                    b.Property<long>("PartnerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CargoPublico");

                    b.Property<string>("Correo");

                    b.Property<long>("CustomerId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<bool>("FuncionarioPublico");

                    b.Property<string>("Identidad");

                    b.Property<string>("Listados");

                    b.Property<string>("PartnerName");

                    b.Property<string>("RTN");

                    b.Property<string>("Telefono");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("PartnerId");

                    b.ToTable("CustomerPartners");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerPhones", b =>
                {
                    b.Property<long>("CustomerPhoneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Phone");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("CustomerPhoneId");

                    b.ToTable("CustomerPhones");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerProduct", b =>
                {
                    b.Property<long>("CustomerProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<double>("SaldoProductoCertificado");

                    b.Property<double>("SaldoProductoSacos");

                    b.Property<double>("SaldoProductoTotal");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CustomerProductId");

                    b.ToTable("CustomerProduct");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerType", b =>
                {
                    b.Property<long>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerTypeName")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CustomerTypeId");

                    b.ToTable("CustomerType");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomersOfCustomer", b =>
                {
                    b.Property<long>("CustomerOfId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ContactPerson");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<int>("CustomerTypeId");

                    b.Property<string>("Email");

                    b.Property<string>("Identidad")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<string>("RTN")
                        .IsRequired();

                    b.Property<string>("State");

                    b.Property<string>("ZipCode");

                    b.HasKey("CustomerOfId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersOfCustomer");
                });

            modelBuilder.Entity("ERPAPI.Models.DebitNote", b =>
                {
                    b.Property<long>("DebitNoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CAI");

                    b.Property<string>("Caja");

                    b.Property<long>("CertificadoDepositoId");

                    b.Property<string>("Correo");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<DateTime>("DebitNoteDate");

                    b.Property<DateTime>("DebitNoteDueDate");

                    b.Property<string>("DebitNoteName");

                    b.Property<int>("DebitNoteTypeId");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Direccion");

                    b.Property<double>("Discount");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Freight");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdPuntoEmision");

                    b.Property<string>("Impreso");

                    b.Property<string>("NoConstanciadeRegistro");

                    b.Property<string>("NoFin");

                    b.Property<string>("NoInicio");

                    b.Property<string>("NoOCExenta");

                    b.Property<string>("NoSAG");

                    b.Property<int>("NúmeroDEI");

                    b.Property<DateTime>("OrderDate");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTN");

                    b.Property<string>("Remarks");

                    b.Property<long>("SalesOrderId");

                    b.Property<int>("SalesTypeId");

                    b.Property<int>("ShipmentId");

                    b.Property<double>("SubTotal");

                    b.Property<string>("Sucursal");

                    b.Property<double>("Tax");

                    b.Property<double>("Tax18");

                    b.Property<string>("Tefono");

                    b.Property<string>("TipoDocumento");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<string>("TotalLetras");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("DebitNoteId");

                    b.ToTable("DebitNote");
                });

            modelBuilder.Entity("ERPAPI.Models.DebitNoteLine", b =>
                {
                    b.Property<long>("DebitNoteLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountName");

                    b.Property<double>("Amount");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<int>("DebitNoteId");

                    b.Property<long?>("DebitNoteId1");

                    b.Property<string>("Description");

                    b.Property<double>("DiscountAmount");

                    b.Property<double>("DiscountPercentage");

                    b.Property<double>("Price");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("SubTotal");

                    b.Property<double>("TaxAmount");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.HasKey("DebitNoteLineId");

                    b.HasIndex("DebitNoteId1");

                    b.ToTable("DebitNoteLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Departamento", b =>
                {
                    b.Property<long>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AplicaComision");

                    b.Property<long?>("ComisionId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("NombreDepartamento");

                    b.Property<long?>("PeridicidadId");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdDepartamento");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("ERPAPI.Models.Dependientes", b =>
                {
                    b.Property<long>("IdDependientes")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionDependientes");

                    b.Property<int?>("Edad");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaNacimiento");

                    b.Property<long?>("IdEmpleado");

                    b.Property<string>("NombreDependientes");

                    b.Property<string>("Parentezco");

                    b.Property<string>("TelefonoDependientes");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdDependientes");

                    b.ToTable("Dependientes");
                });

            modelBuilder.Entity("ERPAPI.Models.DepreciationFixedAsset", b =>
                {
                    b.Property<long>("DepreciationFixedAssetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("April");

                    b.Property<double>("August");

                    b.Property<double>("December");

                    b.Property<double>("February");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("FixedAssetId");

                    b.Property<double>("January");

                    b.Property<double>("July");

                    b.Property<double>("June");

                    b.Property<double>("March");

                    b.Property<double>("May");

                    b.Property<double>("November");

                    b.Property<double>("October");

                    b.Property<double>("September");

                    b.Property<double>("TotalDepreciated");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int>("Year");

                    b.HasKey("DepreciationFixedAssetId");

                    b.ToTable("DepreciationFixedAsset");
                });

            modelBuilder.Entity("ERPAPI.Models.Dimensions", b =>
                {
                    b.Property<string>("Num")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30);

                    b.Property<string>("Description")
                        .HasMaxLength(60);

                    b.Property<int>("DimCode");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Num");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("ERPAPI.Models.Doc_CP", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<double>("Amount");

                    b.Property<string>("AnnulationReason");

                    b.Property<double>("Balance");

                    b.Property<double>("Balance_Mon");

                    b.Property<bool>("Base");

                    b.Property<int>("CurrencyId");

                    b.Property<int>("DayTerms");

                    b.Property<string>("Description");

                    b.Property<DateTime>("DocDate");

                    b.Property<string>("DocNumber");

                    b.Property<string>("DocPaymentNumber");

                    b.Property<long?>("DocTipoId");

                    b.Property<int>("DocTypeId");

                    b.Property<DateTime>("DueDate");

                    b.Property<double>("LatePaymentAmount");

                    b.Property<double>("LatePaymentInterest");

                    b.Property<double>("PartialAmount");

                    b.Property<bool>("Payed");

                    b.Property<string>("PaymentNumber");

                    b.Property<int>("PaymentQty");

                    b.Property<string>("PaymentReference");

                    b.Property<int>("PaymentTerm");

                    b.Property<long>("PaymentTypeId");

                    b.Property<string>("Remarks");

                    b.Property<long>("TaxId");

                    b.Property<string>("VendorDocumentId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DocTipoId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("TaxId");

                    b.ToTable("Doc_CP");
                });

            modelBuilder.Entity("ERPAPI.Models.ElementoConfiguracion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Formula");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("Idconfiguracion");

                    b.Property<string>("Nombre");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double?>("Valordecimal");

                    b.Property<string>("Valorstring");

                    b.Property<string>("Valorstring2");

                    b.HasKey("Id");

                    b.HasIndex("Idconfiguracion");

                    b.ToTable("ElementoConfiguracion");
                });

            modelBuilder.Entity("ERPAPI.Models.EmployeeAbsence", b =>
                {
                    b.Property<long>("EmployeeAbsenceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AbsenceTypeId");

                    b.Property<string>("AbsenceTypeName");

                    b.Property<string>("DeductionIndicator");

                    b.Property<long>("EmployeeId");

                    b.Property<string>("EmployeeName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaFinal");

                    b.Property<DateTime>("FechaInicial");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("QuantityDays");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("EmployeeAbsenceId");

                    b.ToTable("EmployeeAbsence");
                });

            modelBuilder.Entity("ERPAPI.Models.EmployeeDocument", b =>
                {
                    b.Property<long>("EmployeeDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentName");

                    b.Property<long>("DocumentTypeId");

                    b.Property<string>("DocumentTypeName");

                    b.Property<long>("EmployeeId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime>("FechaIngreso");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<string>("Path");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("EmployeeDocumentId");

                    b.ToTable("EmployeeDocument");
                });

            modelBuilder.Entity("ERPAPI.Models.EmployeeSalary", b =>
                {
                    b.Property<long>("EmployeeSalaryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("DayApplication");

                    b.Property<string>("Estado");

                    b.Property<long>("IdEmpleado");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdFrequency");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<decimal?>("QtySalary")
                        .IsRequired();

                    b.HasKey("EmployeeSalaryId");

                    b.ToTable("EmployeeSalary");
                });

            modelBuilder.Entity("ERPAPI.Models.Employees", b =>
                {
                    b.Property<long>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ApplicationUserId");

                    b.Property<string>("Correo");

                    b.Property<string>("CuentaBanco");

                    b.Property<string>("Direccion");

                    b.Property<int>("Extension");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEgreso");

                    b.Property<DateTime>("FechaFinContrato");

                    b.Property<DateTime?>("FechaIngreso");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaNacimiento");

                    b.Property<string>("Foto");

                    b.Property<string>("Genero");

                    b.Property<long?>("IdActivoinactivo");

                    b.Property<long>("IdBank");

                    b.Property<int>("IdBranch");

                    b.Property<long>("IdCity");

                    b.Property<long>("IdCountry");

                    b.Property<int>("IdCurrency");

                    b.Property<long>("IdDepartamento");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdPuesto");

                    b.Property<long>("IdState");

                    b.Property<long>("IdTipoContrato");

                    b.Property<string>("Identidad");

                    b.Property<string>("NombreContacto");

                    b.Property<string>("NombreEmpleado");

                    b.Property<string>("Notas");

                    b.Property<decimal?>("Salario");

                    b.Property<string>("Telefono");

                    b.Property<string>("TelefonoContacto");

                    b.Property<string>("TipoSangre");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("IdBank");

                    b.HasIndex("IdBranch");

                    b.HasIndex("IdCity");

                    b.HasIndex("IdCountry");

                    b.HasIndex("IdCurrency");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdPuesto");

                    b.HasIndex("IdState");

                    b.HasIndex("IdTipoContrato");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososBono", b =>
                {
                    b.Property<long>("EndososBonoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<double>("CantidadEndosar");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaOtorgado");

                    b.Property<string>("FirmadoEn");

                    b.Property<long>("IdCD");

                    b.Property<string>("Impreso");

                    b.Property<long>("NoCD");

                    b.Property<string>("NombreEndoso");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("TasaDeInteres");

                    b.Property<long>("TipoEndoso");

                    b.Property<long>("TipoEndosoId");

                    b.Property<string>("TipoEndosoName");

                    b.Property<double>("TotalEndoso");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double>("ValorEndosar");

                    b.HasKey("EndososBonoId");

                    b.ToTable("EndososBono");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososBonoLine", b =>
                {
                    b.Property<long>("EndososBonoLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CertificadoLineId");

                    b.Property<long>("EndososBonoId");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<double>("ValorEndoso");

                    b.HasKey("EndososBonoLineId");

                    b.HasIndex("EndososBonoId");

                    b.ToTable("EndososBonoLine");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososCertificados", b =>
                {
                    b.Property<long>("EndososCertificadosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<double>("CantidadEndosar");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaOtorgado");

                    b.Property<string>("FirmadoEn");

                    b.Property<long>("IdCD");

                    b.Property<string>("Impreso");

                    b.Property<long>("NoCD");

                    b.Property<string>("NombreEndoso");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("TasaDeInteres");

                    b.Property<long>("TipoEndoso");

                    b.Property<long>("TipoEndosoId");

                    b.Property<string>("TipoEndosoName");

                    b.Property<double>("TotalEndoso");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double>("ValorEndosar");

                    b.HasKey("EndososCertificadosId");

                    b.ToTable("EndososCertificados");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososCertificadosLine", b =>
                {
                    b.Property<long>("EndososCertificadosLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CertificadoLineId");

                    b.Property<long>("EndososCertificadosId");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<double>("ValorEndoso");

                    b.HasKey("EndososCertificadosLineId");

                    b.HasIndex("EndososCertificadosId");

                    b.ToTable("EndososCertificadosLine");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososLiberacion", b =>
                {
                    b.Property<long>("EndososLiberacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EndososId");

                    b.Property<long>("EndososLineId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLiberacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Quantity");

                    b.Property<double>("Saldo");

                    b.Property<string>("TipoEndoso");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("EndososLiberacionId");

                    b.ToTable("EndososLiberacion");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososTalon", b =>
                {
                    b.Property<long>("EndososTalonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<double>("CantidadEndosar");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaOtorgado");

                    b.Property<string>("FirmadoEn");

                    b.Property<long>("IdCD");

                    b.Property<string>("Impreso");

                    b.Property<long>("NoCD");

                    b.Property<string>("NombreEndoso");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("TasaDeInteres");

                    b.Property<long>("TipoEndoso");

                    b.Property<long>("TipoEndosoId");

                    b.Property<string>("TipoEndosoName");

                    b.Property<double>("TotalEndoso");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double>("ValorEndosar");

                    b.HasKey("EndososTalonId");

                    b.ToTable("EndososTalon");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososTalonLine", b =>
                {
                    b.Property<long>("EndososTalonLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CertificadoLineId");

                    b.Property<long>("EndososTalonId");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<double>("ValorEndoso");

                    b.HasKey("EndososTalonLineId");

                    b.HasIndex("EndososTalonId");

                    b.ToTable("EndososTalonLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Escala", b =>
                {
                    b.Property<long>("IdEscala")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEscala");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<long?>("Idpadre");

                    b.Property<string>("NombreEscala");

                    b.Property<decimal?>("Porcentaje");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.Property<decimal?>("ValorCalculo");

                    b.Property<decimal?>("ValorFinal");

                    b.Property<decimal?>("ValorInicial");

                    b.HasKey("IdEscala");

                    b.ToTable("Escala");
                });

            modelBuilder.Entity("ERPAPI.Models.Estados", b =>
                {
                    b.Property<long>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEstado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdGrupoEstado");

                    b.Property<string>("NombreEstado")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("IdEstado");

                    b.HasIndex("IdGrupoEstado");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("ERPAPI.Models.ExchangeRate", b =>
                {
                    b.Property<long>("ExchangeRateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<DateTime>("DayofRate");

                    b.Property<decimal>("ExchangeRateValue")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.HasKey("ExchangeRateId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("ExchangeRate");
                });

            modelBuilder.Entity("ERPAPI.Models.FixedAsset", b =>
                {
                    b.Property<long>("FixedAssetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<DateTime>("AssetDate");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CenterCostId");

                    b.Property<string>("CenterCostName");

                    b.Property<double>("Cost");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("FixedActiveLife");

                    b.Property<string>("FixedAssetCode");

                    b.Property<string>("FixedAssetDescription");

                    b.Property<long>("FixedAssetGroupId");

                    b.Property<string>("FixedAssetName");

                    b.Property<long>("IdEstado");

                    b.Property<double>("ResidualValue");

                    b.Property<double>("ToDepreciate");

                    b.Property<double>("TotalDepreciated");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("FixedAssetId");

                    b.ToTable("FixedAsset");
                });

            modelBuilder.Entity("ERPAPI.Models.FixedAssetGroup", b =>
                {
                    b.Property<long>("FixedAssetGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("FixedAssetGroupDescription");

                    b.Property<long?>("FixedAssetGroupId1");

                    b.Property<string>("FixedAssetGroupName");

                    b.Property<string>("FixedGroupCode");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("FixedAssetGroupId");

                    b.HasIndex("FixedAssetGroupId1");

                    b.ToTable("FixedAssetGroup");
                });

            modelBuilder.Entity("ERPAPI.Models.Formula", b =>
                {
                    b.Property<long>("IdFormula")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalculoFormula");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<int?>("IdTipoFormula");

                    b.Property<string>("NombreEstado");

                    b.Property<string>("NombreFormula");

                    b.Property<string>("NombreTipoformula");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdFormula");

                    b.ToTable("Formula");
                });

            modelBuilder.Entity("ERPAPI.Models.FormulasAplicadas", b =>
                {
                    b.Property<long>("IdFormulaAplicada")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("FormulaEmpleada");

                    b.Property<long?>("IdCalculo");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdEstado");

                    b.Property<long?>("IdFormula");

                    b.Property<decimal?>("MultiplicarPor");

                    b.Property<string>("NombreFormula");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdFormulaAplicada");

                    b.ToTable("FormulasAplicadas");
                });

            modelBuilder.Entity("ERPAPI.Models.FormulasConFormulas", b =>
                {
                    b.Property<long>("IdFormulaconformula")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstructuraConcepto");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("Fechamodificacion");

                    b.Property<long?>("IdFormula");

                    b.Property<long?>("IdFormulachild");

                    b.Property<string>("NombreFormulachild");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdFormulaconformula");

                    b.ToTable("FormulasConFormulas");
                });

            modelBuilder.Entity("ERPAPI.Models.FormulasConcepto", b =>
                {
                    b.Property<long>("IdformulaConcepto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstructuraConcepto");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdConcepto");

                    b.Property<long?>("Idformula");

                    b.Property<string>("NombreConcepto");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdformulaConcepto");

                    b.ToTable("FormulasConcepto");
                });

            modelBuilder.Entity("ERPAPI.Models.FundingInterestRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("IdEstado");

                    b.Property<int>("Months");

                    b.Property<double>("Rate");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("FundingInterestRate");
                });

            modelBuilder.Entity("ERPAPI.Models.GeneralLedgerHeader", b =>
                {
                    b.Property<long>("GeneralLedgerHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("DocumentType");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("GeneralLedgerHeaderId");

                    b.ToTable("GeneralLedgerHeader");
                });

            modelBuilder.Entity("ERPAPI.Models.GeneralLedgerLine", b =>
                {
                    b.Property<long>("GeneralLedgerHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<long?>("AccountId1");

                    b.Property<decimal>("Amount");

                    b.Property<int>("DrCr");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long?>("GeneralLedgerHeaderId1");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("GeneralLedgerHeaderId");

                    b.HasIndex("AccountId1");

                    b.HasIndex("GeneralLedgerHeaderId1");

                    b.ToTable("GeneralLedgerLine");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDelivered", b =>
                {
                    b.Property<long>("GoodsDeliveredId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Comments");

                    b.Property<long>("ControlId");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<long>("ExitTicket");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("GoodsDeliveryAuthorizationId");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<string>("Marca");

                    b.Property<string>("Name");

                    b.Property<DateTime>("OrderDate");

                    b.Property<double>("PesoBruto");

                    b.Property<double>("PesoNeto");

                    b.Property<double>("PesoNeto2");

                    b.Property<string>("Placa");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("Reference");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("TaraTransporte");

                    b.Property<double>("TaraUnidadMedida");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.Property<long>("WeightBallot");

                    b.HasKey("GoodsDeliveredId");

                    b.ToTable("GoodsDelivered");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveredLine", b =>
                {
                    b.Property<long>("GoodsDeliveredLinedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ControlPalletsId");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("GoodsDeliveredId");

                    b.Property<long>("NoAR");

                    b.Property<long>("NoCD");

                    b.Property<double>("Price");

                    b.Property<long>("ProducId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<int>("QuantitySacos");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("GoodsDeliveredLinedId");

                    b.HasIndex("GoodsDeliveredId");

                    b.ToTable("GoodsDeliveredLine");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorization", b =>
                {
                    b.Property<long>("GoodsDeliveryAuthorizationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AuthorizationDate");

                    b.Property<string>("AuthorizationName");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Comments");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DelegadoFiscal");

                    b.Property<double>("DerechoLps");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Impreso");

                    b.Property<string>("Name");

                    b.Property<long>("NoCD");

                    b.Property<long>("NoPoliza");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("TotalCertificado");

                    b.Property<double>("TotalFinanciado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("GoodsDeliveryAuthorizationId");

                    b.ToTable("GoodsDeliveryAuthorization");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorizationLine", b =>
                {
                    b.Property<long>("GoodsDeliveryAuthorizationLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<long>("GoodsDeliveryAuthorizationId");

                    b.Property<long>("NoCertificadoDeposito");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<double>("SaldoProducto");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<double>("ValorImpuestos");

                    b.Property<long>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.Property<double>("valorcertificado");

                    b.Property<double>("valorfinanciado");

                    b.HasKey("GoodsDeliveryAuthorizationLineId");

                    b.HasIndex("GoodsDeliveryAuthorizationId");

                    b.ToTable("GoodsDeliveryAuthorizationLine");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsReceived", b =>
                {
                    b.Property<long>("GoodsReceivedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Comments");

                    b.Property<long>("ControlId");

                    b.Property<long>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<long>("ExitTicket");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<string>("Marca");

                    b.Property<string>("Name");

                    b.Property<DateTime>("OrderDate");

                    b.Property<double>("PesoBruto");

                    b.Property<double>("PesoNeto");

                    b.Property<double>("PesoNeto2");

                    b.Property<string>("Placa");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("Reference");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("TaraCamion");

                    b.Property<double>("TaraTransporte");

                    b.Property<double>("TaraUnidadMedida");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("VigilanteId");

                    b.Property<string>("VigilanteName");

                    b.Property<int>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.Property<long>("WeightBallot");

                    b.HasKey("GoodsReceivedId");

                    b.ToTable("GoodsReceived");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsReceivedLine", b =>
                {
                    b.Property<long>("GoodsReceiveLinedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ControlPalletsId");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("GoodsReceivedId");

                    b.Property<double>("Price");

                    b.Property<long>("ProducId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<int>("QuantitySacos");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("GoodsReceiveLinedId");

                    b.HasIndex("GoodsReceivedId");

                    b.ToTable("GoodsReceivedLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<int?>("LineaId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("GrupoId");

                    b.HasIndex("LineaId");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("ERPAPI.Models.GrupoConfiguracion", b =>
                {
                    b.Property<long>("IdConfiguracion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long?>("IdConfiguraciondestino");

                    b.Property<long?>("IdConfiguracionorigen");

                    b.Property<long>("IdZona");

                    b.Property<string>("Nombreconfiguracion");

                    b.Property<string>("Tipoconfiguracion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdConfiguracion");

                    b.ToTable("GrupoConfiguracion");
                });

            modelBuilder.Entity("ERPAPI.Models.HoursWorked", b =>
                {
                    b.Property<long>("IdHorastrabajadas")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("EsFeriado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEntrada");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<decimal?>("MultiplicaHoras");

                    b.Property<string>("NombreEmpleado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdHorastrabajadas");

                    b.ToTable("HoursWorked");
                });

            modelBuilder.Entity("ERPAPI.Models.HoursWorkedDetail", b =>
                {
                    b.Property<long>("IdDetallehorastrabajadas")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("Horaentrada");

                    b.Property<DateTime?>("Horasalida");

                    b.Property<long?>("IdHorasTrabajadas");

                    b.Property<decimal?>("Multiplicahoras");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdDetallehorastrabajadas");

                    b.HasIndex("IdHorasTrabajadas");

                    b.ToTable("HoursWorkedDetail");
                });

            modelBuilder.Entity("ERPAPI.Models.Incidencias", b =>
                {
                    b.Property<long>("IdIncidencia")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionIncidencia");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaFin");

                    b.Property<DateTime?>("FechaInicio");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdTipoIncidencia");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdIncidencia");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("ERPAPI.Models.IncomeAndExpenseAccountLine", b =>
                {
                    b.Property<long>("IncomeAndExpenseAccountLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("DebitCredit");

                    b.Property<string>("Description");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<long>("DocumentId");

                    b.Property<long>("IncomeAndExpensesAccountId");

                    b.Property<long>("TypeDocument");

                    b.HasKey("IncomeAndExpenseAccountLineId");

                    b.ToTable("IncomeAndExpenseAccountLine");
                });

            modelBuilder.Entity("ERPAPI.Models.IncomeAndExpensesAccount", b =>
                {
                    b.Property<long>("IncomeAndExpensesAccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountDescription");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("EstadoId");

                    b.Property<string>("EstadoName");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("TypeAccountId");

                    b.Property<string>("TypeAccountName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioEjecucion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IncomeAndExpensesAccountId");

                    b.ToTable("IncomeAndExpensesAccount");
                });

            modelBuilder.Entity("ERPAPI.Models.Insurances", b =>
                {
                    b.Property<int>("InsurancesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<string>("DocumentName");

                    b.Property<long>("DocumentTypeId");

                    b.Property<string>("DocumentTypeName");

                    b.Property<string>("InsurancesName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<string>("Path");

                    b.HasKey("InsurancesId");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("ERPAPI.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CAI");

                    b.Property<string>("Caja");

                    b.Property<long>("CertificadoDepositoId");

                    b.Property<string>("Correo");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Direccion");

                    b.Property<double>("Discount");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Freight");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdPuntoEmision");

                    b.Property<string>("Impreso");

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<DateTime>("InvoiceDueDate");

                    b.Property<string>("InvoiceName");

                    b.Property<int>("InvoiceTypeId");

                    b.Property<string>("NoConstanciadeRegistro");

                    b.Property<string>("NoFin");

                    b.Property<string>("NoInicio");

                    b.Property<string>("NoOCExenta");

                    b.Property<string>("NoSAG");

                    b.Property<int>("NumeroDEI");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("OrderId");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTN");

                    b.Property<string>("Remarks");

                    b.Property<long>("SalesOrderId");

                    b.Property<int>("SalesTypeId");

                    b.Property<int>("ShipmentId");

                    b.Property<double>("SubTotal");

                    b.Property<string>("Sucursal");

                    b.Property<double>("Tax");

                    b.Property<double>("Tax18");

                    b.Property<string>("Tefono");

                    b.Property<string>("TipoDocumento");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<string>("TotalLetras");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoiceCalculation", b =>
                {
                    b.Property<long>("InvoiceCalculationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<int>("Dias");

                    b.Property<int>("Dias2");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdCD");

                    b.Property<long>("IdEstado");

                    b.Property<Guid?>("Identificador");

                    b.Property<double>("IngresoMercadería");

                    b.Property<long>("InvoiceId");

                    b.Property<double>("MercaderiaCertificada");

                    b.Property<long>("NoCD");

                    b.Property<double>("PorcentajeMerma");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<long>("ProformaInvoiceId");

                    b.Property<double>("Quantity");

                    b.Property<double>("UnitPrice");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double>("ValorAFacturarMerma");

                    b.Property<double>("ValorFacturar");

                    b.Property<double>("ValorLps");

                    b.Property<double>("ValorLpsMerma");

                    b.HasKey("InvoiceCalculationId");

                    b.ToTable("InvoiceCalculation");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoiceLine", b =>
                {
                    b.Property<long>("InvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<string>("Description");

                    b.Property<double>("DiscountAmount");

                    b.Property<double>("DiscountPercentage");

                    b.Property<int>("InvoiceId");

                    b.Property<double>("Price");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("SubTotal");

                    b.Property<double>("TaxAmount");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.HasKey("InvoiceLineId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLine");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntry", b =>
                {
                    b.Property<long>("JournalEntryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DatePosted");

                    b.Property<long>("DocumentId");

                    b.Property<long?>("EstadoId");

                    b.Property<string>("EstadoName");

                    b.Property<int?>("GeneralLedgerHeaderId");

                    b.Property<long?>("GeneralLedgerHeaderId1");

                    b.Property<int>("IdPaymentCode");

                    b.Property<int>("IdTypeofPayment");

                    b.Property<string>("Memo");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<int?>("PartyId");

                    b.Property<long?>("PartyId1");

                    b.Property<int>("PartyTypeId");

                    b.Property<string>("PartyTypeName");

                    b.Property<bool?>("Posted");

                    b.Property<string>("ReferenceNo");

                    b.Property<double>("TotalCredit");

                    b.Property<double>("TotalDebit");

                    b.Property<string>("TypeJournalName");

                    b.Property<int>("TypeOfAdjustmentId");

                    b.Property<string>("TypeOfAdjustmentName");

                    b.Property<int?>("VoucherType");

                    b.HasKey("JournalEntryId");

                    b.HasIndex("GeneralLedgerHeaderId1");

                    b.HasIndex("PartyId1");

                    b.ToTable("JournalEntry");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryConfiguration", b =>
                {
                    b.Property<long>("JournalEntryConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<string>("Description");

                    b.Property<long>("EstadoId");

                    b.Property<string>("EstadoName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("Transaction");

                    b.Property<long>("TransactionId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("JournalEntryConfigurationId");

                    b.ToTable("JournalEntryConfiguration");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryConfigurationLine", b =>
                {
                    b.Property<long>("JournalEntryConfigurationLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountName");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<string>("DebitCredit");

                    b.Property<long>("DebitCreditId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("JournalEntryConfigurationId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("JournalEntryConfigurationLineId");

                    b.HasIndex("JournalEntryConfigurationId");

                    b.ToTable("JournalEntryConfigurationLine");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryLine", b =>
                {
                    b.Property<long>("JournalEntryLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<long?>("AccountId1");

                    b.Property<string>("AccountName");

                    b.Property<long>("CostCenterId")
                        .HasMaxLength(30);

                    b.Property<string>("CostCenterName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<double>("Credit");

                    b.Property<double>("CreditME");

                    b.Property<double>("CreditSy");

                    b.Property<double>("Debit");

                    b.Property<double>("DebitME");

                    b.Property<double>("DebitSy");

                    b.Property<string>("Description")
                        .HasMaxLength(60);

                    b.Property<long>("JournalEntryId");

                    b.Property<string>("Memo");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.HasKey("JournalEntryLineId");

                    b.HasIndex("AccountId1");

                    b.HasIndex("JournalEntryId");

                    b.ToTable("JournalEntryLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Kardex", b =>
                {
                    b.Property<long>("KardexId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Currency");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DocName");

                    b.Property<long>("DocType");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<long>("DocumentId");

                    b.Property<string>("DocumentName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Impreso");

                    b.Property<DateTime>("KardexDate");

                    b.Property<int>("TypeOperationId");

                    b.Property<string>("TypeOperationName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("KardexId");

                    b.ToTable("Kardex");
                });

            modelBuilder.Entity("ERPAPI.Models.KardexLine", b =>
                {
                    b.Property<long>("KardexLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("ControlEstibaId");

                    b.Property<string>("ControlEstibaName");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<long>("GoodsReceivedId");

                    b.Property<DateTime>("KardexDate");

                    b.Property<long>("KardexId");

                    b.Property<long>("ProducId");

                    b.Property<string>("ProductName");

                    b.Property<double>("QuantityEntry");

                    b.Property<double>("QuantityEntryBags");

                    b.Property<double>("QuantityEntryCD");

                    b.Property<double>("QuantityOut");

                    b.Property<double>("QuantityOutBags");

                    b.Property<double>("QuantityOutCD");

                    b.Property<long>("SubProducId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("Total");

                    b.Property<double>("TotalBags");

                    b.Property<double>("TotalCD");

                    b.Property<int>("TypeOperationId");

                    b.Property<string>("TypeOperationName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("KardexLineId");

                    b.HasIndex("KardexId");

                    b.ToTable("KardexLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Linea", b =>
                {
                    b.Property<int>("LineaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("LineaId");

                    b.ToTable("Linea");
                });

            modelBuilder.Entity("ERPAPI.Models.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("MarcaId");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("ERPAPI.Models.NumeracionSAR", b =>
                {
                    b.Property<long>("IdNumeracion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<int>("CantidadOtorgada");

                    b.Property<string>("DocSubType");

                    b.Property<long>("DocSubTypeId");

                    b.Property<string>("DocType");

                    b.Property<long>("DocTypeId");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimite");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdCAI");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdPuntoEmision");

                    b.Property<string>("NoFin");

                    b.Property<string>("NoInicio");

                    b.Property<string>("PuntoEmision");

                    b.Property<string>("SiguienteNumero");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("_cai");

                    b.HasKey("IdNumeracion");

                    b.ToTable("NumeracionSAR");
                });

            modelBuilder.Entity("ERPAPI.Models.OrdenFormula", b =>
                {
                    b.Property<long>("Idordenformula")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("Idformula");

                    b.Property<int?>("Orden");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Idordenformula");

                    b.ToTable("OrdenFormula");
                });

            modelBuilder.Entity("ERPAPI.Models.PEPS", b =>
                {
                    b.Property<long>("PEPSId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo");

                    b.Property<long>("CityId");

                    b.Property<string>("CityName");

                    b.Property<string>("Comments");

                    b.Property<long>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Funcionario");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Identidad");

                    b.Property<string>("Official");

                    b.Property<long>("PartidoPoliticoId");

                    b.Property<string>("PartidoPoliticoName");

                    b.Property<string>("Periodo");

                    b.Property<long>("StateId");

                    b.Property<string>("StateName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("PEPSId");

                    b.ToTable("PEPS");
                });

            modelBuilder.Entity("ERPAPI.Models.Party", b =>
                {
                    b.Property<long>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("PartyType");

                    b.Property<string>("Phone");

                    b.Property<string>("Website");

                    b.HasKey("PartyId");

                    b.ToTable("Party");
                });

            modelBuilder.Entity("ERPAPI.Models.PasswordHistory", b =>
                {
                    b.Property<long>("PasswordHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("UserId");

                    b.Property<Guid?>("UserId1");

                    b.HasKey("PasswordHistoryId");

                    b.HasIndex("UserId1");

                    b.ToTable("PasswordHistory");
                });

            modelBuilder.Entity("ERPAPI.Models.PaymentTypes", b =>
                {
                    b.Property<long>("PaymentTypesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<string>("PaymentTypesName");

                    b.HasKey("PaymentTypesId");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("ERPAPI.Models.Payroll", b =>
                {
                    b.Property<long>("IdPlanilla")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionPlanilla");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("NombrePlanilla");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdPlanilla");

                    b.ToTable("Payroll");
                });

            modelBuilder.Entity("ERPAPI.Models.PayrollEmployee", b =>
                {
                    b.Property<long>("IdPlanillaempleado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaIngreso");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdEstado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdPlanillaempleado");

                    b.ToTable("PayrollEmployee");
                });

            modelBuilder.Entity("ERPAPI.Models.PeriodicidadPago", b =>
                {
                    b.Property<long>("PeriodicidadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Nombre");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("PeriodicidadId");

                    b.ToTable("PeriodicidadPago");
                });

            modelBuilder.Entity("ERPAPI.Models.Policy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Policy");
                });

            modelBuilder.Entity("ERPAPI.Models.PolicyClaims", b =>
                {
                    b.Property<int>("idroleclaim");

                    b.Property<Guid>("IdPolicy");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("idroleclaim", "IdPolicy");

                    b.HasAlternateKey("IdPolicy", "idroleclaim");

                    b.ToTable("PolicyClaims");
                });

            modelBuilder.Entity("ERPAPI.Models.PolicyRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Estado");

                    b.Property<long>("IdEstado");

                    b.Property<Guid>("IdPolicy");

                    b.Property<Guid>("IdRol");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PolicyRoles");
                });

            modelBuilder.Entity("ERPAPI.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Correlative");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<double>("DefaultBuyingPrice");

                    b.Property<double>("DefaultSellingPrice");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int?>("FundingInterestRateId");

                    b.Property<int?>("GrupoId");

                    b.Property<long>("IdEstado");

                    b.Property<int?>("LineaId");

                    b.Property<int?>("MarcaId");

                    b.Property<decimal?>("Prima");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductImageUrl");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<long?>("ProductTypeId");

                    b.Property<int?>("UnitOfMeasureId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("ProductId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FundingInterestRateId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("LineaId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ProductCode")
                        .IsUnique()
                        .HasFilter("[ProductCode] IS NOT NULL");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ERPAPI.Models.ProductRelation", b =>
                {
                    b.Property<long>("RelationProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long>("ProductId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("RelationProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SubProductId");

                    b.ToTable("ProductRelation");
                });

            modelBuilder.Entity("ERPAPI.Models.ProductType", b =>
                {
                    b.Property<long>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<long>("IdEstado");

                    b.Property<string>("ProductTypeName")
                        .IsRequired();

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("ERPAPI.Models.ProductUserRelation", b =>
                {
                    b.Property<long>("ProductUserRelationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DocType");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ProductUserRelationId");

                    b.ToTable("ProductUserRelation");
                });

            modelBuilder.Entity("ERPAPI.Models.ProformaInvoice", b =>
                {
                    b.Property<int>("ProformaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CertificadoDepositoId");

                    b.Property<string>("Correo");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerAreaId");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Direccion");

                    b.Property<double>("Discount");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Freight");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<DateTime>("OrderDate");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProformaName");

                    b.Property<string>("RTN");

                    b.Property<string>("Remarks");

                    b.Property<long>("SalesOrderId");

                    b.Property<int>("SalesTypeId");

                    b.Property<double>("SubTotal");

                    b.Property<double>("Tax");

                    b.Property<double>("Tax18");

                    b.Property<string>("Tefono");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ProformaId");

                    b.ToTable("ProformaInvoice");
                });

            modelBuilder.Entity("ERPAPI.Models.ProformaInvoiceLine", b =>
                {
                    b.Property<long>("ProformaLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<string>("Description");

                    b.Property<double>("DiscountAmount");

                    b.Property<double>("DiscountPercentage");

                    b.Property<double>("Price");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<int>("ProformaInvoiceId");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("SubTotal");

                    b.Property<double>("TaxAmount");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("ProformaLineId");

                    b.HasIndex("ProformaInvoiceId");

                    b.ToTable("ProformaInvoiceLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Puesto", b =>
                {
                    b.Property<long>("IdPuesto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdDepartamento");

                    b.Property<string>("NombreDepartamento");

                    b.Property<string>("NombrePuesto");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdPuesto");

                    b.ToTable("Puesto");
                });

            modelBuilder.Entity("ERPAPI.Models.PuntoEmision", b =>
                {
                    b.Property<long>("IdPuntoEmision")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("PuntoEmisionCod");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdPuntoEmision");

                    b.ToTable("PuntoEmision");
                });

            modelBuilder.Entity("ERPAPI.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int?>("BranchId");

                    b.Property<int?>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<DateTime>("DatePlaced");

                    b.Property<double>("Discount");

                    b.Property<long?>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double?>("Freight");

                    b.Property<string>("PONumber");

                    b.Property<long?>("POTypeId");

                    b.Property<string>("Remarks");

                    b.Property<string>("Requisitioner");

                    b.Property<long?>("ShippingTypeId");

                    b.Property<string>("ShippingTypeName");

                    b.Property<double>("SubTotal");

                    b.Property<double>("Tax18");

                    b.Property<double>("TaxAmount");

                    b.Property<long?>("TaxId");

                    b.Property<string>("TaxName");

                    b.Property<decimal>("TaxRate");

                    b.Property<string>("Terms");

                    b.Property<string>("Title");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long?>("VendorId");

                    b.Property<string>("VendorName");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ShippingTypeId");

                    b.HasIndex("TaxId");

                    b.HasIndex("VendorId");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("ERPAPI.Models.PurchaseOrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LineNumber");

                    b.Property<double?>("Price");

                    b.Property<string>("ProductDescription");

                    b.Property<long?>("ProductId");

                    b.Property<int>("PurchaseOrderId");

                    b.Property<double?>("QtyOrdered");

                    b.Property<double?>("QtyReceived");

                    b.Property<double?>("QtyReceivedToDate");

                    b.Property<long?>("TaxId");

                    b.Property<string>("TaxName");

                    b.Property<decimal>("TaxRate");

                    b.Property<int>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("TaxId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("PurchaseOrderLine");
                });

            modelBuilder.Entity("ERPAPI.Models.RecibosCertificado", b =>
                {
                    b.Property<long>("IdReciboCertificado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdCD");

                    b.Property<long>("IdRecibo");

                    b.Property<long>("UnitMeasureId");

                    b.Property<double>("productocantidadbultos");

                    b.Property<double>("productorecibolempiras");

                    b.Property<double>("productounidad");

                    b.HasKey("IdReciboCertificado");

                    b.ToTable("RecibosCertificado");
                });

            modelBuilder.Entity("ERPAPI.Models.Reconciliacion", b =>
                {
                    b.Property<long>("IdReconciliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionReconciliacion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaAplicacion");

                    b.Property<DateTime?>("FechaFinReconciliacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaReconciliacion");

                    b.Property<DateTime?>("Fechacreacion");

                    b.Property<long?>("IdCalculoplanilla");

                    b.Property<long>("IdEstado");

                    b.Property<decimal?>("SaldoEmpleado");

                    b.Property<decimal?>("Tasacambio");

                    b.Property<decimal?>("TotalReconciliacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdReconciliacion");

                    b.ToTable("Reconciliacion");
                });

            modelBuilder.Entity("ERPAPI.Models.ReconciliacionDetalle", b =>
                {
                    b.Property<long>("IdDetallereconciliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bonos");

                    b.Property<decimal?>("CatorceSalarioProporcional");

                    b.Property<decimal?>("Deducciones");

                    b.Property<string>("Descripcion");

                    b.Property<int?>("Dia");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<decimal?>("Horasextras");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("IdReconciliacion");

                    b.Property<int?>("Month");

                    b.Property<decimal?>("OtrosIngresos");

                    b.Property<decimal?>("Quincesalarioproporcional");

                    b.Property<decimal?>("Salario");

                    b.Property<decimal?>("SalarioRecibido");

                    b.Property<decimal?>("TrecesalarioProporcional");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int?>("Year");

                    b.HasKey("IdDetallereconciliacion");

                    b.ToTable("ReconciliacionDetalle");
                });

            modelBuilder.Entity("ERPAPI.Models.ReconciliacionEscala", b =>
                {
                    b.Property<long>("IdEscalareconciliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEscala");

                    b.Property<decimal?>("DiferenciaPorretener");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdConcepto");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdEscala");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("IdReconciliacion");

                    b.Property<int?>("MesesEjecutados");

                    b.Property<int?>("MesesRestantes");

                    b.Property<decimal?>("MontoEscala");

                    b.Property<decimal?>("Montocatorcesalario");

                    b.Property<decimal?>("Montoquincesalario");

                    b.Property<decimal?>("Montoretenido");

                    b.Property<decimal?>("Montotrecesalario");

                    b.Property<string>("NombreConcepto");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdEscalareconciliacion");

                    b.ToTable("ReconciliacionEscala");
                });

            modelBuilder.Entity("ERPAPI.Models.ReconciliacionGasto", b =>
                {
                    b.Property<long>("Idreconciliaciongasto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripciongasto");

                    b.Property<DateTime?>("Fechaaplicacion");

                    b.Property<DateTime?>("Fechacreacion");

                    b.Property<DateTime?>("Fechamodificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("Idreconciliacion");

                    b.Property<decimal?>("Montogasto");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("Idreconciliaciongasto");

                    b.ToTable("ReconciliacionGasto");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesOrder", b =>
                {
                    b.Property<int>("SalesOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Correo");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Direccion");

                    b.Property<double>("Discount");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Freight");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<string>("NameContract");

                    b.Property<DateTime>("OrderDate");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTN");

                    b.Property<string>("Remarks");

                    b.Property<string>("SalesOrderName");

                    b.Property<int>("SalesTypeId");

                    b.Property<double>("SubTotal");

                    b.Property<double>("Tax");

                    b.Property<double>("Tax18");

                    b.Property<string>("Tefono");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<long>("TypeContractId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("SalesOrderId");

                    b.ToTable("SalesOrder");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesOrderLine", b =>
                {
                    b.Property<long>("SalesOrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("Description");

                    b.Property<double>("DiscountAmount");

                    b.Property<double>("DiscountPercentage");

                    b.Property<double>("Price");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<int>("SalesOrderId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("SubTotal");

                    b.Property<double>("TaxAmount");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.HasKey("SalesOrderLineId");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("SalesOrderLine");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesType", b =>
                {
                    b.Property<int>("SalesTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("SalesTypeName")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("SalesTypeId");

                    b.ToTable("SalesType");
                });

            modelBuilder.Entity("ERPAPI.Models.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFullShipment");

                    b.Property<int>("SalesOrderId");

                    b.Property<DateTime>("ShipmentDate");

                    b.Property<string>("ShipmentName");

                    b.Property<int>("ShipmentTypeId");

                    b.Property<int>("WarehouseId");

                    b.HasKey("ShipmentId");

                    b.ToTable("Shipment");
                });

            modelBuilder.Entity("ERPAPI.Models.ShipmentType", b =>
                {
                    b.Property<int>("ShipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ShipmentTypeName")
                        .IsRequired();

                    b.HasKey("ShipmentTypeId");

                    b.ToTable("ShipmentType");
                });

            modelBuilder.Entity("ERPAPI.Models.SolicitudCertificadoDeposito", b =>
                {
                    b.Property<long>("IdSCD")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aduana");

                    b.Property<string>("Almacenaje");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Direccion");

                    b.Property<string>("EmpresaSeguro");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCertificado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaFirma");

                    b.Property<DateTime>("FechaInicioComputo");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaPagoBanco");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<DateTime>("FechaVencimientoDeposito");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<string>("LugarFirma");

                    b.Property<string>("ManifiestoNo");

                    b.Property<double>("MontoGarantia");

                    b.Property<long>("NoCD");

                    b.Property<string>("NoPoliza");

                    b.Property<long>("NoTraslado");

                    b.Property<string>("NombreEmpresa");

                    b.Property<string>("NombrePrestatario");

                    b.Property<string>("OtrosCargos");

                    b.Property<double>("PorcentajeInteresesInsolutos");

                    b.Property<double>("Quantitysum");

                    b.Property<string>("Seguro");

                    b.Property<long>("ServicioId");

                    b.Property<string>("ServicioName");

                    b.Property<double>("SujetasAPago");

                    b.Property<double>("Total");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.HasKey("IdSCD");

                    b.ToTable("SolicitudCertificadoDeposito");
                });

            modelBuilder.Entity("ERPAPI.Models.SolicitudCertificadoLine", b =>
                {
                    b.Property<long>("CertificadoLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("Description");

                    b.Property<long>("IdSCD");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("TotalCantidad");

                    b.Property<string>("UnitMeasurName");

                    b.Property<long>("UnitMeasureId");

                    b.HasKey("CertificadoLineId");

                    b.HasIndex("IdSCD");

                    b.ToTable("SolicitudCertificadoLine");
                });

            modelBuilder.Entity("ERPAPI.Models.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CountryId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Name");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("ERPAPI.Models.SubProduct", b =>
                {
                    b.Property<long>("SubproductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BagBalance");

                    b.Property<double>("Balance");

                    b.Property<string>("Barcode");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<double>("Merma");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductName");

                    b.Property<long>("ProductTypeId");

                    b.Property<string>("ProductTypeName");

                    b.Property<long>("TipoProhibidoId");

                    b.Property<string>("TipoProhibidoName");

                    b.Property<int?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("SubproductId");

                    b.HasIndex("ProductCode")
                        .IsUnique()
                        .HasFilter("[ProductCode] IS NOT NULL");

                    b.ToTable("SubProduct");
                });

            modelBuilder.Entity("ERPAPI.Models.Tax", b =>
                {
                    b.Property<long>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("TaxId");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("ERPAPI.Models.TipoContrato", b =>
                {
                    b.Property<long>("IdTipoContrato")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("NombreTipoContrato");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdTipoContrato");

                    b.ToTable("TipoContrato");
                });

            modelBuilder.Entity("ERPAPI.Models.TipoDocumento", b =>
                {
                    b.Property<long>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("NombreTipoDocumento");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("ERPAPI.Models.TipoPlanillas", b =>
                {
                    b.Property<long>("IdTipoPlanilla")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("TipoPlanilla");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdTipoPlanilla");

                    b.ToTable("TipoPlanillas");
                });

            modelBuilder.Entity("ERPAPI.Models.TiposDocumento", b =>
                {
                    b.Property<long>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TiposDocumento");
                });

            modelBuilder.Entity("ERPAPI.Models.TypeAccount", b =>
                {
                    b.Property<long>("TypeAccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<string>("TypeAccountName");

                    b.HasKey("TypeAccountId");

                    b.ToTable("TypeAccount");
                });

            modelBuilder.Entity("ERPAPI.Models.TypeJournal", b =>
                {
                    b.Property<long>("TypeJournalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<string>("TypeJournalName");

                    b.HasKey("TypeJournalId");

                    b.ToTable("TypeJournal");
                });

            modelBuilder.Entity("ERPAPI.Models.UnitOfMeasure", b =>
                {
                    b.Property<int>("UnitOfMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UnitOfMeasureName")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("UnitOfMeasureId");

                    b.HasIndex("UnitOfMeasureName")
                        .IsUnique();

                    b.ToTable("UnitOfMeasure");
                });

            modelBuilder.Entity("ERPAPI.Models.Vendor", b =>
                {
                    b.Property<long>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<long>("CityId");

                    b.Property<string>("CompanyReferenceone");

                    b.Property<string>("CompanyReferencetwo");

                    b.Property<string>("ContactPerson");

                    b.Property<long>("CountryId");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("Email");

                    b.Property<string>("Estado");

                    b.Property<string>("EstadoVendorConfi");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdEstadoVendorConfi");

                    b.Property<string>("Identidad");

                    b.Property<string>("IdentityRepresentative");

                    b.Property<string>("Phone");

                    b.Property<string>("PhoneReferenceone");

                    b.Property<string>("PhoneReferencetwo");

                    b.Property<double>("QtyMonth");

                    b.Property<string>("RTN")
                        .IsRequired();

                    b.Property<string>("RTNRepresentative");

                    b.Property<string>("RepresentativeName");

                    b.Property<long>("StateId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("VendorName")
                        .IsRequired();

                    b.Property<long>("VendorTypeId");

                    b.Property<string>("VendorTypeName");

                    b.Property<string>("ZipCode");

                    b.HasKey("VendorId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IdEstado");

                    b.HasIndex("StateId");

                    b.HasIndex("VendorTypeId");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorDocument", b =>
                {
                    b.Property<long>("VendorDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("CreatedUser");

                    b.Property<string>("DocumentName");

                    b.Property<long>("DocumentTypeId");

                    b.Property<string>("DocumentTypeName");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("ModifiedUser");

                    b.Property<string>("Path");

                    b.Property<long>("VendorId");

                    b.HasKey("VendorDocumentId");

                    b.ToTable("VendorDocument");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorInvoice", b =>
                {
                    b.Property<int>("VendorInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CAI");

                    b.Property<string>("Correo");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<string>("Direccion");

                    b.Property<double>("Discount");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Freight");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<string>("NoConstanciadeRegistro");

                    b.Property<string>("NoFin");

                    b.Property<string>("NoInicio");

                    b.Property<string>("NoOCExenta");

                    b.Property<string>("NoSAG");

                    b.Property<int>("NumeroDEI");

                    b.Property<DateTime>("OrderDate");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<int>("PurchaseOrderId");

                    b.Property<string>("RTN");

                    b.Property<DateTime>("ReceivedDate");

                    b.Property<string>("Remarks");

                    b.Property<int>("SalesTypeId");

                    b.Property<int>("ShipmentId");

                    b.Property<double>("SubTotal");

                    b.Property<string>("Sucursal");

                    b.Property<double>("Tax");

                    b.Property<double>("Tax18");

                    b.Property<string>("Tefono");

                    b.Property<string>("TipoDocumento");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<string>("TotalLetras");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("VendorId");

                    b.Property<DateTime>("VendorInvoiceDate");

                    b.Property<DateTime>("VendorInvoiceDueDate");

                    b.Property<string>("VendorInvoiceName");

                    b.Property<int>("VendorInvoiceTypeId");

                    b.Property<string>("VendorName");

                    b.Property<string>("VendorRefNumber");

                    b.HasKey("VendorInvoiceId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorInvoice");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorInvoiceLine", b =>
                {
                    b.Property<long>("InvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<double>("Amount");

                    b.Property<string>("Description");

                    b.Property<double>("DiscountAmount");

                    b.Property<double>("DiscountPercentage");

                    b.Property<int>("InvoiceId");

                    b.Property<string>("ItemName");

                    b.Property<double>("Price");

                    b.Property<long>("ProductId");

                    b.Property<double>("Quantity");

                    b.Property<double>("SubTotal");

                    b.Property<double>("TaxAmount");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<int?>("VendorInvoiceId");

                    b.HasKey("InvoiceLineId");

                    b.HasIndex("AccountId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("VendorInvoiceId");

                    b.ToTable("VendorInvoiceLine");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorOfCustomer", b =>
                {
                    b.Property<long>("VendorOfId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ContactPerson");

                    b.Property<long?>("CustomerId");

                    b.Property<string>("Email");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<long>("VendorId");

                    b.Property<string>("VendorName")
                        .IsRequired();

                    b.Property<int>("VendorTypeId");

                    b.Property<string>("ZipCode");

                    b.HasKey("VendorOfId");

                    b.HasIndex("CustomerId");

                    b.ToTable("VendorOfCustomer");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ProductId");

                    b.Property<long>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId", "VendorId")
                        .IsUnique();

                    b.ToTable("VendorProduct");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorType", b =>
                {
                    b.Property<long>("VendorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("VendorTypeName")
                        .IsRequired();

                    b.HasKey("VendorTypeId");

                    b.ToTable("VendorType");
                });

            modelBuilder.Entity("ERPAPI.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<double>("CantidadPoliza");

                    b.Property<double>("CapacidadBodega");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaEmisionPoliza");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaVencimientoPoliza");

                    b.Property<long>("IdEstado");

                    b.Property<string>("NoPoliza");

                    b.Property<int>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("WarehouseName")
                        .IsRequired();

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("OFAC.sdnListM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("publshInformationId");

                    b.Property<int>("sdnListPublshInformationId");

                    b.HasKey("Id");

                    b.HasIndex("publshInformationId");

                    b.ToTable("sdnList");
                });

            modelBuilder.Entity("OFAC.sdnListPublshInformationM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Publish_Date");

                    b.Property<int>("Record_Count");

                    b.Property<bool>("Record_CountSpecified");

                    b.HasKey("Id");

                    b.ToTable("sdnListPublshInformation");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAddressM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address1");

                    b.Property<string>("address2");

                    b.Property<string>("address3");

                    b.Property<string>("city");

                    b.Property<string>("country");

                    b.Property<string>("postalCode");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<string>("stateOrProvince");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryAddress");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAkaM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<string>("type");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryAka");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryCitizenshipM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("country");

                    b.Property<bool>("mainEntry");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryCitizenship");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryDateOfBirthItemM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dateOfBirth");

                    b.Property<bool>("mainEntry");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryDateOfBirthItem");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryIDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("expirationDate");

                    b.Property<string>("idCountry");

                    b.Property<string>("idNumber");

                    b.Property<string>("idType");

                    b.Property<string>("issueDate");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryID");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("programList");

                    b.Property<string>("remarks");

                    b.Property<int?>("sdnListMId");

                    b.Property<string>("sdnType");

                    b.Property<string>("title");

                    b.Property<int>("uid");

                    b.Property<int?>("vesselInfoId");

                    b.HasKey("Id");

                    b.HasIndex("sdnListMId");

                    b.HasIndex("vesselInfoId");

                    b.ToTable("sdnListSdnEntry");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryNationalityM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("country");

                    b.Property<bool>("mainEntry");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryNationality");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryPlaceOfBirthItemM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("mainEntry");

                    b.Property<string>("placeOfBirth");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryPlaceOfBirthItem");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryVesselInfoM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("callSign");

                    b.Property<int>("grossRegisteredTonnage");

                    b.Property<bool>("grossRegisteredTonnageSpecified");

                    b.Property<int>("tonnage");

                    b.Property<bool>("tonnageSpecified");

                    b.Property<string>("vesselFlag");

                    b.Property<string>("vesselOwner");

                    b.Property<string>("vesselType");

                    b.HasKey("Id");

                    b.ToTable("sdnListSdnEntryVesselInfo");
                });

            modelBuilder.Entity("ONUListas.CONSOLIDATED_LISTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dateGenerated");

                    b.HasKey("Id");

                    b.ToTable("CONSOLIDATED_LISTM");
                });

            modelBuilder.Entity("ONUListas.DESIGNATIONM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VALUE");

                    b.HasKey("Id");

                    b.ToTable("DESIGNATIONM");
                });

            modelBuilder.Entity("ONUListas.ENTITIESM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ENTITIESM");
                });

            modelBuilder.Entity("ONUListas.ENTITYM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("COMMENTS1");

                    b.Property<int?>("CONSOLIDATED_LISTMId");

                    b.Property<string>("DATAID");

                    b.Property<DateTime>("DELISTED_ON");

                    b.Property<bool>("DELISTED_ONSpecified");

                    b.Property<int?>("ENTITIESMId");

                    b.Property<string>("FIRST_NAME");

                    b.Property<string>("LAST_DAY_UPDATED");

                    b.Property<DateTime>("LISTED_ON");

                    b.Property<int?>("LIST_TYPEId");

                    b.Property<string>("NAME_ORIGINAL_SCRIPT");

                    b.Property<string>("REFERENCE_NUMBER");

                    b.Property<string>("SORT_KEY");

                    b.Property<string>("SORT_KEY_LAST_MOD");

                    b.Property<DateTime>("SUBMITTED_ON");

                    b.Property<bool>("SUBMITTED_ONSpecified");

                    b.Property<string>("UN_LIST_TYPE");

                    b.Property<string>("VERSIONNUM");

                    b.HasKey("Id");

                    b.HasIndex("CONSOLIDATED_LISTMId");

                    b.HasIndex("ENTITIESMId");

                    b.HasIndex("LIST_TYPEId");

                    b.ToTable("ENTITYM");
                });

            modelBuilder.Entity("ONUListas.ENTITY_ADDRESSM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CITY");

                    b.Property<string>("COUNTRY");

                    b.Property<int?>("ENTITYMId");

                    b.Property<string>("NOTE");

                    b.Property<string>("STATE_PROVINCE");

                    b.Property<string>("STREET");

                    b.Property<string>("ZIP_CODE");

                    b.HasKey("Id");

                    b.HasIndex("ENTITYMId");

                    b.ToTable("ENTITY_ADDRESSM");
                });

            modelBuilder.Entity("ONUListas.ENTITY_ALIASM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ALIAS_NAME");

                    b.Property<int?>("ENTITYMId");

                    b.Property<string>("QUALITY");

                    b.HasKey("Id");

                    b.HasIndex("ENTITYMId");

                    b.ToTable("ENTITY_ALIASM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUALM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("COMMENTS1");

                    b.Property<int?>("CONSOLIDATED_LISTMId");

                    b.Property<string>("DATAID");

                    b.Property<DateTime>("DELISTED_ON");

                    b.Property<bool>("DELISTED_ONSpecified");

                    b.Property<string>("DESIGNATION");

                    b.Property<string>("FIRST_NAME");

                    b.Property<string>("FOURTH_NAME");

                    b.Property<string>("GENDER");

                    b.Property<int?>("INDIVIDUALSMId");

                    b.Property<string>("LAST_DAY_UPDATED");

                    b.Property<DateTime>("LISTED_ON");

                    b.Property<int?>("LIST_TYPEId");

                    b.Property<string>("NAME_ORIGINAL_SCRIPT");

                    b.Property<string>("NATIONALITY");

                    b.Property<string>("NATIONALITY2");

                    b.Property<string>("REFERENCE_NUMBER");

                    b.Property<string>("SECOND_NAME");

                    b.Property<string>("SORT_KEY");

                    b.Property<string>("SORT_KEY_LAST_MOD");

                    b.Property<string>("SUBMITTED_BY");

                    b.Property<string>("THIRD_NAME");

                    b.Property<string>("TITLE");

                    b.Property<string>("UN_LIST_TYPE");

                    b.Property<string>("VERSIONNUM");

                    b.HasKey("Id");

                    b.HasIndex("CONSOLIDATED_LISTMId");

                    b.HasIndex("INDIVIDUALSMId");

                    b.HasIndex("LIST_TYPEId");

                    b.ToTable("INDIVIDUALM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUALSM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("INDIVIDUALSM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_ADDRESSM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CITY");

                    b.Property<string>("COUNTRY");

                    b.Property<int?>("INDIVIDUALMId");

                    b.Property<string>("NOTE");

                    b.Property<string>("STATE_PROVINCE");

                    b.Property<string>("STREET");

                    b.Property<string>("ZIP_CODE");

                    b.HasKey("Id");

                    b.HasIndex("INDIVIDUALMId");

                    b.ToTable("INDIVIDUAL_ADDRESSM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_ALIASM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ALIAS_NAME");

                    b.Property<string>("CITY_OF_BIRTH");

                    b.Property<string>("COUNTRY_OF_BIRTH");

                    b.Property<string>("DATE_OF_BIRTH");

                    b.Property<int?>("INDIVIDUALMId");

                    b.Property<string>("NOTE");

                    b.Property<string>("QUALITY");

                    b.HasKey("Id");

                    b.HasIndex("INDIVIDUALMId");

                    b.ToTable("INDIVIDUAL_ALIASM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_DATE_OF_BIRTHM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("INDIVIDUALMId");

                    b.Property<string>("Items");

                    b.Property<string>("ItemsElementName");

                    b.Property<string>("NOTE");

                    b.Property<string>("TYPE_OF_DATE");

                    b.HasKey("Id");

                    b.HasIndex("INDIVIDUALMId");

                    b.ToTable("INDIVIDUAL_DATE_OF_BIRTHM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_DOCUMENTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CITY_OF_ISSUE");

                    b.Property<string>("COUNTRY_OF_ISSUE");

                    b.Property<string>("DATE_OF_ISSUE");

                    b.Property<int?>("INDIVIDUALMId");

                    b.Property<string>("ISSUING_COUNTRY");

                    b.Property<string>("NOTE");

                    b.Property<string>("NUMBER");

                    b.Property<string>("TYPE_OF_DOCUMENT");

                    b.Property<string>("TYPE_OF_DOCUMENT2");

                    b.HasKey("Id");

                    b.HasIndex("INDIVIDUALMId");

                    b.ToTable("INDIVIDUAL_DOCUMENTM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_PLACE_OF_BIRTHM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CITY");

                    b.Property<string>("COUNTRY");

                    b.Property<int?>("INDIVIDUALMId");

                    b.Property<string>("NOTE");

                    b.Property<string>("STATE_PROVINCE");

                    b.HasKey("Id");

                    b.HasIndex("INDIVIDUALMId");

                    b.ToTable("INDIVIDUAL_PLACE_OF_BIRTHM");
                });

            modelBuilder.Entity("ONUListas.LAST_DAY_UPDATEDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VALUE");

                    b.HasKey("Id");

                    b.ToTable("LAST_DAY_UPDATEDM");
                });

            modelBuilder.Entity("ONUListas.LIST_TYPEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VALUE");

                    b.HasKey("Id");

                    b.ToTable("LIST_TYPEM");
                });

            modelBuilder.Entity("ONUListas.NATIONALITYM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VALUE");

                    b.HasKey("Id");

                    b.ToTable("NATIONALITYM");
                });

            modelBuilder.Entity("ONUListas.TITLEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VALUE");

                    b.HasKey("Id");

                    b.ToTable("TITLEM");
                });

            modelBuilder.Entity("ERPAPI.Models.Accounting", b =>
                {
                    b.HasOne("ERPAPI.Models.CompanyInfo", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Accounting", "ParentAccount")
                        .WithMany("ChildAccounts")
                        .HasForeignKey("ParentAccountAccountId");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUser", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserClaim", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetRoleClaims", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserLogins", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserTokens", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Boleto_Sal", b =>
                {
                    b.HasOne("ERPAPI.Models.Boleto_Ent", "Boleto_Ent")
                        .WithOne("Boleto_Sal")
                        .HasForeignKey("ERPAPI.Models.Boleto_Sal", "clave_e")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Branch", b =>
                {
                    b.HasOne("ERPAPI.Models.City", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.State", "Departamento")
                        .WithMany("Branch")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ERPAPI.Models.CertificadoLine", b =>
                {
                    b.HasOne("ERPAPI.Models.CertificadoDeposito")
                        .WithMany("_CertificadoLine")
                        .HasForeignKey("IdCD")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.City", b =>
                {
                    b.HasOne("ERPAPI.Models.State")
                        .WithMany("City")
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("ERPAPI.Models.Conciliacion", b =>
                {
                    b.HasOne("ERPAPI.Models.Bank", "Banco")
                        .WithMany()
                        .HasForeignKey("IdBanco");
                });

            modelBuilder.Entity("ERPAPI.Models.ConciliacionLinea", b =>
                {
                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "TipoTransaccion")
                        .WithMany()
                        .HasForeignKey("ElementoConfiguracion");

                    b.HasOne("ERPAPI.Models.Currency", "Moneda")
                        .WithMany()
                        .HasForeignKey("IdMoneda");
                });

            modelBuilder.Entity("ERPAPI.Models.ControlPalletsLine", b =>
                {
                    b.HasOne("ERPAPI.Models.ControlPallets")
                        .WithMany("_ControlPalletsLine")
                        .HasForeignKey("ControlPalletsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CreditNoteLine", b =>
                {
                    b.HasOne("ERPAPI.Models.CreditNote", "CreditNote")
                        .WithMany("CreditNoteLine")
                        .HasForeignKey("CreditNoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Customer", b =>
                {
                    b.HasOne("ERPAPI.Models.City", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("ERPAPI.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("ERPAPI.Models.CustomerType", "CustomerType")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId");

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado");

                    b.HasOne("ERPAPI.Models.State", "Departamento")
                        .WithMany("Customer")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerAreaProduct", b =>
                {
                    b.HasOne("ERPAPI.Models.CustomerArea")
                        .WithMany("CustomerAreaProduct")
                        .HasForeignKey("CustomerAreaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CustomersOfCustomer", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer")
                        .WithMany("_Customers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.DebitNoteLine", b =>
                {
                    b.HasOne("ERPAPI.Models.DebitNote", "DebitNote")
                        .WithMany("DebitNoteLine")
                        .HasForeignKey("DebitNoteId1");
                });

            modelBuilder.Entity("ERPAPI.Models.Doc_CP", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "DocType")
                        .WithMany()
                        .HasForeignKey("DocTipoId");

                    b.HasOne("ERPAPI.Models.PaymentTypes", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ElementoConfiguracion", b =>
                {
                    b.HasOne("ERPAPI.Models.GrupoConfiguracion", "GrupoConfiguracion")
                        .WithMany()
                        .HasForeignKey("Idconfiguracion");
                });

            modelBuilder.Entity("ERPAPI.Models.Employees", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("ERPAPI.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("IdBank")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("IdBranch")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.City", "City")
                        .WithMany("Employees")
                        .HasForeignKey("IdCity")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.Country", "Country")
                        .WithMany("Employees")
                        .HasForeignKey("IdCountry")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany("Employees")
                        .HasForeignKey("IdCurrency")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany("Employees")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.Puesto", "Puesto")
                        .WithMany()
                        .HasForeignKey("IdPuesto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.State", "State")
                        .WithMany("Employees")
                        .HasForeignKey("IdState")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.TipoContrato", "TipoContrato")
                        .WithMany()
                        .HasForeignKey("IdTipoContrato")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.EndososBonoLine", b =>
                {
                    b.HasOne("ERPAPI.Models.EndososBono")
                        .WithMany("EndososBonoLine")
                        .HasForeignKey("EndososBonoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.EndososCertificadosLine", b =>
                {
                    b.HasOne("ERPAPI.Models.EndososCertificados")
                        .WithMany("EndososCertificadosLine")
                        .HasForeignKey("EndososCertificadosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.EndososTalonLine", b =>
                {
                    b.HasOne("ERPAPI.Models.EndososTalon")
                        .WithMany("EndososTalonLine")
                        .HasForeignKey("EndososTalonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Estados", b =>
                {
                    b.HasOne("ERPAPI.Models.GrupoConfiguracion", "GrupoConfiguracion")
                        .WithMany()
                        .HasForeignKey("IdGrupoEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ExchangeRate", b =>
                {
                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.FixedAssetGroup", b =>
                {
                    b.HasOne("ERPAPI.Models.FixedAssetGroup")
                        .WithMany("_FixedAssetGroup")
                        .HasForeignKey("FixedAssetGroupId1");
                });

            modelBuilder.Entity("ERPAPI.Models.GeneralLedgerLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "Account")
                        .WithMany("GeneralLedgerLines")
                        .HasForeignKey("AccountId1");

                    b.HasOne("ERPAPI.Models.GeneralLedgerHeader", "GeneralLedgerHeader")
                        .WithMany()
                        .HasForeignKey("GeneralLedgerHeaderId1");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveredLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsDelivered")
                        .WithMany("_GoodsDeliveredLine")
                        .HasForeignKey("GoodsDeliveredId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorizationLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsDeliveryAuthorization")
                        .WithMany("GoodsDeliveryAuthorizationLine")
                        .HasForeignKey("GoodsDeliveryAuthorizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsReceivedLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsReceived")
                        .WithMany("_GoodsReceivedLine")
                        .HasForeignKey("GoodsReceivedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Grupo", b =>
                {
                    b.HasOne("ERPAPI.Models.Linea", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaId");
                });

            modelBuilder.Entity("ERPAPI.Models.HoursWorkedDetail", b =>
                {
                    b.HasOne("ERPAPI.Models.HoursWorked")
                        .WithMany("idhorastrabajadasconstrains")
                        .HasForeignKey("IdHorasTrabajadas");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoiceLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Invoice", "Invoice")
                        .WithMany("InvoiceLine")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntry", b =>
                {
                    b.HasOne("ERPAPI.Models.GeneralLedgerHeader", "GeneralLedgerHeader")
                        .WithMany()
                        .HasForeignKey("GeneralLedgerHeaderId1");

                    b.HasOne("ERPAPI.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId1");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryConfigurationLine", b =>
                {
                    b.HasOne("ERPAPI.Models.JournalEntryConfiguration")
                        .WithMany("JournalEntryConfigurationLine")
                        .HasForeignKey("JournalEntryConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId1");

                    b.HasOne("ERPAPI.Models.JournalEntry", "JournalEntry")
                        .WithMany("JournalEntryLines")
                        .HasForeignKey("JournalEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.KardexLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Kardex")
                        .WithMany("_KardexLine")
                        .HasForeignKey("KardexId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.PasswordHistory", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser", "User")
                        .WithMany("PasswordHistory")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("ERPAPI.Models.Product", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany("Product")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.FundingInterestRate", "FundingInterestRate")
                        .WithMany()
                        .HasForeignKey("FundingInterestRateId");

                    b.HasOne("ERPAPI.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId");

                    b.HasOne("ERPAPI.Models.Linea", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaId");

                    b.HasOne("ERPAPI.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId");
                });

            modelBuilder.Entity("ERPAPI.Models.ProductRelation", b =>
                {
                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany("ProductRelation")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany("ProductRelation")
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ERPAPI.Models.ProformaInvoiceLine", b =>
                {
                    b.HasOne("ERPAPI.Models.ProformaInvoice", "ProformaInvoice")
                        .WithMany("ProformaInvoiceLine")
                        .HasForeignKey("ProformaInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.PurchaseOrder", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "POType")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "ShippingType")
                        .WithMany()
                        .HasForeignKey("ShippingTypeId");

                    b.HasOne("ERPAPI.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.HasOne("ERPAPI.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("ERPAPI.Models.PurchaseOrderLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ERPAPI.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.SalesOrderLine", b =>
                {
                    b.HasOne("ERPAPI.Models.SalesOrder", "SalesOrder")
                        .WithMany("SalesOrderLines")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.SolicitudCertificadoLine", b =>
                {
                    b.HasOne("ERPAPI.Models.SolicitudCertificadoDeposito")
                        .WithMany("_SolicitudCertificadoLine")
                        .HasForeignKey("IdSCD")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.State", b =>
                {
                    b.HasOne("ERPAPI.Models.Country")
                        .WithMany("State")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Vendor", b =>
                {
                    b.HasOne("ERPAPI.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.State", "State")
                        .WithMany("Vendor")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.VendorType", "VendorType")
                        .WithMany()
                        .HasForeignKey("VendorTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.VendorInvoice", b =>
                {
                    b.HasOne("ERPAPI.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.VendorInvoiceLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.VendorInvoice")
                        .WithMany("VendorInvoiceLine")
                        .HasForeignKey("VendorInvoiceId");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorOfCustomer", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer")
                        .WithMany("_Vendor")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("OFAC.sdnListM", b =>
                {
                    b.HasOne("OFAC.sdnListPublshInformationM", "publshInformation")
                        .WithMany()
                        .HasForeignKey("publshInformationId");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAddressM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("addressList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAkaM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("akaList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryCitizenshipM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("citizenshipList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryDateOfBirthItemM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("dateOfBirthList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryIDM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("idList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryM", b =>
                {
                    b.HasOne("OFAC.sdnListM")
                        .WithMany("sdnEntry")
                        .HasForeignKey("sdnListMId");

                    b.HasOne("OFAC.sdnListSdnEntryVesselInfoM", "vesselInfo")
                        .WithMany()
                        .HasForeignKey("vesselInfoId");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryNationalityM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("nationalityList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryPlaceOfBirthItemM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("placeOfBirthList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ONUListas.ENTITYM", b =>
                {
                    b.HasOne("ONUListas.CONSOLIDATED_LISTM")
                        .WithMany("ENTITIES")
                        .HasForeignKey("CONSOLIDATED_LISTMId");

                    b.HasOne("ONUListas.ENTITIESM")
                        .WithMany("ENTITY")
                        .HasForeignKey("ENTITIESMId");

                    b.HasOne("ONUListas.LIST_TYPEM", "LIST_TYPE")
                        .WithMany()
                        .HasForeignKey("LIST_TYPEId");
                });

            modelBuilder.Entity("ONUListas.ENTITY_ADDRESSM", b =>
                {
                    b.HasOne("ONUListas.ENTITYM")
                        .WithMany("ENTITY_ADDRESS")
                        .HasForeignKey("ENTITYMId");
                });

            modelBuilder.Entity("ONUListas.ENTITY_ALIASM", b =>
                {
                    b.HasOne("ONUListas.ENTITYM")
                        .WithMany("ENTITY_ALIAS")
                        .HasForeignKey("ENTITYMId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUALM", b =>
                {
                    b.HasOne("ONUListas.CONSOLIDATED_LISTM")
                        .WithMany("iNDIVIDUALS")
                        .HasForeignKey("CONSOLIDATED_LISTMId");

                    b.HasOne("ONUListas.INDIVIDUALSM")
                        .WithMany("INDIVIDUAL")
                        .HasForeignKey("INDIVIDUALSMId");

                    b.HasOne("ONUListas.LIST_TYPEM", "LIST_TYPE")
                        .WithMany()
                        .HasForeignKey("LIST_TYPEId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_ADDRESSM", b =>
                {
                    b.HasOne("ONUListas.INDIVIDUALM")
                        .WithMany("INDIVIDUAL_ADDRESS")
                        .HasForeignKey("INDIVIDUALMId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_ALIASM", b =>
                {
                    b.HasOne("ONUListas.INDIVIDUALM")
                        .WithMany("INDIVIDUAL_ALIAS")
                        .HasForeignKey("INDIVIDUALMId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_DATE_OF_BIRTHM", b =>
                {
                    b.HasOne("ONUListas.INDIVIDUALM")
                        .WithMany("INDIVIDUAL_DATE_OF_BIRTH")
                        .HasForeignKey("INDIVIDUALMId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_DOCUMENTM", b =>
                {
                    b.HasOne("ONUListas.INDIVIDUALM")
                        .WithMany("INDIVIDUAL_DOCUMENT")
                        .HasForeignKey("INDIVIDUALMId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_PLACE_OF_BIRTHM", b =>
                {
                    b.HasOne("ONUListas.INDIVIDUALM")
                        .WithMany("INDIVIDUAL_PLACE_OF_BIRTH")
                        .HasForeignKey("INDIVIDUALMId");
                });
#pragma warning restore 612, 618
        }
    }
}
